(declare-datatypes () (
 (Maybe.
  (Maybe./Some
    (Maybe./Some/_0 Int)
  )
  (Maybe./None)
 )
))

(check-valid
 (declare-const m@ Maybe.)
 (block
  (assume
   (= m@ (Maybe./None))
  )
  (assert ("000") (= (Maybe./Some/_0 m@) 3)) ; FAILS
 )
)

(check-valid
 (declare-const m@ Maybe.)
 (block
  (assume
   (and
    (is-Maybe./Some m@)
    (= (Maybe./Some/_0 m@) 3)
   )
  )
  (assert ("001") (= m@ (Maybe./Some 3)))
 )
)

(check-valid
 (declare-const m@ Maybe.)
 (block
  (assume
   (and
    (is-Maybe./None m@)
    (= (Maybe./Some/_0 m@) 3)
   )
  )
  (assert ("002a")
   (= (Maybe./Some/_0 m@) 3)
  )
  (assert ("002b")
   (is-Maybe./None m@)
  )
 )
)

 (declare-fun req%foo. (Maybe.) Bool)
 (axiom (forall ((m@ Maybe.)) (!
    (= (req%foo. m@) (and
      (axiom_location ("failed precondition") (= (Maybe./Some/_0 m@) 3))
    ))
 )))

(check-valid
 (declare-const m@ Maybe.)
 (block
  (assume
   (is-Maybe./None m@)
  )
  (assert ("003") ; FAILS
   (req%foo. m@)
  )
 )
)
